{# Declare a macro to create a hierarchical comment list (parent and children realtioship) #}
{% set trickComments = trick.comments %}
{# Manage a counter in twig loop: https://stackoverflow.com/questions/24943462/increment-value-in-twig-file #}
{% macro list_comments(mediaTypesValues, trickComments, parentComment, parentCommentKey) %}
    {% set counter = 0 %}
    {% for key, childComment in trickComments %}
        {# Get current key #}
        {% set currentKey = trickComments|length - key %}
        {# Get possible children #}
        {% if (childComment.parentComment is not null) and (parentComment.uuid == childComment.parentComment.uuid) %}
            {% set counter = counter + 1 %}
            {# Open ul tag if one was opened due to children comment as replies #}
            {% if counter == 1 %}
            <ul class="uk-comment-list uk-margin-small-top uk-margin-medium-left">
            {% endif %}
            <li class="uk-comment uk-margin-small-top uk-visible-toggle">
                <span class="uk-margin-small uk-padding-small uk-border-circle st-color-yellow st-background-blue" uk-icon="icon: reply; ratio; 2.5"></span>
                <strong><span class="uk-padding-small-left uk-text-uppercase uk-text-small st-color-blue">Replied to comment # {{ parentCommentKey }}</span></strong>
                {% include 'single-trick/comment_card.html.twig' with {
                    'comment': childComment,
                    'currentKey': currentKey,
                    'mediaTypesValues': mediaTypesValues,
                    'trickCommentLength': trickComments|length
                } %}
                {# Use macro recursively #}
                {{ _self.list_comments(mediaTypesValues, trickComments, childComment, currentKey) }}
            </li>
        {% endif %}
    {% endfor %}
    {# Close ul tag if one was opened due to children comment as replies #}
    {% if counter != 0 %}
        </ul>
    {% endif %}
{% endmacro %}
{# ------------------------------------------------------------------------- #}
{# list comments #}
<ul id="st-trick-comment-list" class="uk-comment-list">
    {% for key, comment in trickComments %}
        {# Get current key #}
        {% set currentKey = trickComments|length - key %}
        {# Get all comments at first level #}
        {% if comment.parentComment is null %}
            <li class="uk-comment uk-margin-remove-top uk-visible-toggle">
                {% if loop.index != 1 %}
                <hr class="uk-margin-medium-top uk-margin-medium-bottom">
                {% endif %}
                {% include 'single-trick/comment_card.html.twig' with {
                    'comment': comment,
                    'currentKey': currentKey,
                    'mediaTypesValues': mediaTypesValues,
                    'trickCommentLength': trickComments|length
                } %}
                {# Call macro for each comment #}
                {% set currentKey = trickComments|length - key %}
                {{ _self.list_comments(mediaTypesValues, trickComments, comment, currentKey) }}
            </li>
        {% endif %}
    {% endfor %}
</ul>


